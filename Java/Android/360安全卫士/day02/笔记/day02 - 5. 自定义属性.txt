5. 自定义属性,(设置中心,有多个条目,在复用SettingItemView的时候,每一个条目对应的标示,描述内容都不一致)
	1. 查看源码,定义属性时候做法
		sdk所在目录\platforms\android-16\data\res\values\attrs.xml

		<resource>
			<declare-styleable name="TextView">
				<attr name="text" format="string"/>
			</declare-styleable>
		<resource>
	2. 给SettingItemView定义属性,工程res\values\attrs.xml
		<resource>
			<declare-styleable name="SettingItemView全类名">
				<attr name="destitle" format="string"/>
				<attr name="desoff" format="string"/>
				<attr name="deson" format="string"/>
			</declare-styleable>
		<resource>
	3. 自定义属性的使用
		定义名空间namespace
		mobilesafe替换掉原有android
		com.itheima.mobilesafe74必须这样编写,替换掉了android,代表当前应用自定义属性
		xmlns:mobilesafe="http://schemas.android.com/apk/res/com.itheima.mobilesafe74"

		<com.itheima.mobilesafe74.view.SettingItemView
		    xmlns:mobilesafe="http://schemas.android.com/apk/res/com.itheima.mobilesafe74"
		    android:id="@+id/siv_update"
		    android:layout_width="match_parent"
		    android:layout_height="wrap_content"
		    mobilesafe:destitle="自动更新设置"
		    mobilesafe:desoff="自动更新已关闭"
		    mobilesafe:deson="自动更新已开启">
	4. 获取属性值
	    mobilesafe:destitle="自动更新设置"
	    mobilesafe:desoff="自动更新已关闭"
	    mobilesafe:deson="自动更新已开启"
	    以上的是哪个属性都需要给自定义组合控件(SettingItemView)内部的两个TextView去使用,获取属性值
	
	//通过属性索引获取属性名称&属性值
	for(int i=0;i<attrs.getAttributeCount();i++){
		Log.i(tag, "name = "+attrs.getAttributeName(i));
		Log.i(tag, "value = "+attrs.getAttributeValue(i));
		Log.i(tag, "分割线 ================================= ");
	}
	//通过属性获取属性名称&名空间
	mDestitle = attrs.getAttributeValue(NAMESPACE, "destitle");
	mDesoff = attrs.getAttributeValue(NAMESPACE, "desoff");
	mDeson = attrs.getAttributeValue(NAMESPACE, "deson");

	5. 将获取的属性值,设置给title,des
		des根据是否点中决定
		true	deson
		false	desoff
	难